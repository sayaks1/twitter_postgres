name: tests_denormalized
on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup python
      run: |
        pip3 install -r requirements.txt
    - name: Init submodules and start Docker containers
      run: |
        git submodule init
        git submodule update
        docker compose down -v
        docker volume ls -q --filter name=pg_normalized | xargs -r docker volume rm
        docker volume ls -q --filter name=pg_denormalized | xargs -r docker volume rm
        docker compose up -d --build
        docker ps -a


    - name: Wait for container DNS resolution
      run: |
        echo "Waiting for pg_normalized and pg_denormalized to resolve..."
        for i in {1..10}; do
          if getent hosts pg_normalized && getent hosts pg_denormalized; then
            echo "Hostnames resolved"
            break
          fi
          echo "Retrying..."
          sleep 2
        done
    - name: Load pg_normalized schema
      run: |
        docker compose exec -T pg_normalized bash -c "psql -U postgres -d pg_normalized -f /tmp/db/services/pg_normalized/schema.sql" 

    - name: Load pg_denormalized schema
      run: |
        docker compose exec -T pg_denormalized bash -c "psql -U postgres -d pg_denormalized -f /tmp/db/services/pg_denormalized/schema.sql" 

    - name: Wait for container DNS resolution
      run: |
        echo "Waiting for pg_normalized and pg_denormalized to resolve..."
        for i in {1..10}; do
          if getent hosts pg_normalized && getent hosts pg_denormalized; then
            echo "Hostnames resolved"
            break
          fi
          echo "Retrying..."
          sleep 2
        done
    - name: Run load_tweets.sh
      run: |
        sh load_tweets.sh
      env:
        CI: "true"
    - name: Debug database status after load
      run: |
        docker compose exec -T pg_normalized psql -U postgres -d postgres -c "SELECT count(*) FROM tweets;"
        docker compose exec -T pg_denormalized psql -U postgres -d postgres -c "SELECT count(*) FROM tweets_jsonb;"
    - name: Run tests inside pg_denormalized
      run: |
        docker compose exec -e CI=true -T pg_denormalized bash -c "sh /tmp/db/run_tests.sh"
